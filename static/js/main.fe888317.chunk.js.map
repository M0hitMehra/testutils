{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","aria-checked","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","fin","trim","split","filter","e","res","i","length","words","d","counter","prototype","PropTypes","string","isRequired","defaultProps","Alert","word","alert","charAt","slice","msg","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","style","backgroundColor","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fe888317.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n                            {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}  >\r\n                        <input className=\"form-check-input\" aria-checked=\"false\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >{props.mode === \"light\" ? \"Dark\" : \"Light\"} mode</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'App',\r\n    about: 'About Us',\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleRemSpaceClick = () => {\r\n        let newText = text.trim().split(\" \");\r\n        let fin =  newText.filter(check);\r\n        let res = \"\";\r\n        for (let i = 0; i<fin.length; i++) {\r\n                 res += fin[i] + \" \"; \r\n        }\r\n     \r\n        res =  res.trim() ;\r\n        setText(res)\r\n\r\n         function check(e){\r\n            return e !== \"\";\r\n        }\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n  const counter = (words)=>{\r\n        let d= words.trim().split(\" \");\r\n        if(d[d.length-1]===\"\"){\r\n            return d.length-1\r\n        }else{return d.length}\r\n  }\r\n\r\n    return (\r\n\r\n\r\n        < >\r\n            <div className={`container text-${props.mode===\"light\" ? \"dark\" : \"light\"}`} /*style={myStyle}*/>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className={`form-control bg-${props.mode} text-${props.mode===\"light\" ? \"dark\" : \"light\"}` }  value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <div className={`d-flex p-2 bd-highlight text-${props.mode===\"light\" ? \"dark\" : \"light\"}`}>\r\n                    <button className=\"btn btn-primary \" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                    <button className=\"btn btn-primary ms-3\" onClick={handleDownClick}>Convert to LowerCase</button>\r\n                    <button className=\"btn btn-primary ms-3\" onClick={handleRemSpaceClick}>Remove Extra Spaces</button>\r\n                    {/* <button className=\"btn btn-primary ms-3\" onClick={toggleStyle}>{mode}</button> */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`container text-${props.mode===\"light\" ? \"dark\" : \"light\"}`} /*style={myStyle}*/>\r\n                <h1>Text Data</h1>\r\n                Words are {counter(text)} and Characters are {text.length} \r\n                <br/> <br/>\r\n                Word Read time {0.008*text.split(\" \").length} minutes \r\n                <br/> \r\n                <h1>Preview</h1>\r\n                <p>{text.length>0?text:\"Enter Your Text in Above Box\"}</p>\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalized = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalized(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\nimport Alert from './components/Alert'\nimport React, { useState } from 'react'\n// import About  from './components/About'\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n  \n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"black\"\n      showAlert(\"Dark Mode Enabled\", \"success\")\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light Mode Enabled\", \"success\")\n    }\n  }\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Navbar title=\"Text Editor\" about=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        \n      </div>\n      <TextForm heading=\"Enter Text\" mode={mode} />\n    {/* <Routes> */}\n      {/* <Route path=\"/\" element={<TextForm heading=\"Enter Text\" mode={mode} />} />\n      <Route path=\"/about\" element={<About mode = {mode}/>} />\n        */}\n    {/* </Routes>\n  </BrowserRouter> */}\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}